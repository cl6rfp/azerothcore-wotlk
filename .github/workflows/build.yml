name: Build AzerothCore for Windows

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Install dependencies
      run: |
        choco install cmake -y
        choco install git -y
        choco install ninja -y
        choco install python -y
        choco install mariadb -y
        choco install vcredist140 -y
        choco install 7zip -y

    - name: Download Boost (Alternativa confiable)
      run: |
        # Descargar desde un mirror oficial de Boost (archivo .7z)
        Invoke-WebRequest -Uri "https://boostorg.jfrog.io/artifactory/main/release/1.83.0/binaries/boost_1_83_0-msvc-14.2-64.7z" -OutFile "boost.7z"
        7z x boost.7z -oC:\boost
        # Verificar estructura de carpetas
        if (!(Test-Path "C:\boost\lib64-msvc-14.2")) {
            throw "Boost no se extrajo correctamente"
        }

    - name: Configure CMake
      run: |
        $env:BOOST_ROOT = "C:\boost"
        $env:BOOST_LIBRARYDIR = "C:\boost\lib64-msvc-14.2"
        $env:BOOST_INCLUDEDIR = "C:\boost\include\boost-1_83"
        
        cmake -S . -B build -G "Ninja" `
          -DWITH_ELUNA=ON `
          -DCMAKE_BUILD_TYPE=Release `
          -DBOOST_ROOT="$env:BOOST_ROOT" `
          -DBoost_LIBRARY_DIR="$env:BOOST_LIBRARYDIR" `
          -DBoost_NO_SYSTEM_PATHS=ON `
          -DBoost_DEBUG=ON  # Para diagn√≥stico

    - name: Build AzerothCore
      run: cmake --build build --parallel 4

    # ... (pasos posteriores igual que antes)
