name: Build AzerothCore for Windows

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Install Visual Studio Build Tools
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    - name: Install dependencias
      run: |
        # Instalar Chocolatey si no está instalado
        Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
        
        # Instalar dependencias con progreso en una línea
        $packages = @("cmake", "git", "ninja", "python", "mariadb", "vcredist140")
        foreach ($package in $packages) {
            Write-Host "Instalando $package..." -NoNewline
            choco install $package -y --no-progress | Out-Host
            Write-Host " ✓"
        }

        # Instalar Boost específicamente
        Write-Host "Instalando Boost..." -NoNewline
        choco install boost-msvc-14.3 -y --no-progress --force | Out-Host
        Write-Host " ✓"
        
        # Configurar variables de entorno para Visual Studio
        $env:VCToolsVersion = "14.0"
        $env:VCToolsInstallDir = "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.0"
        
        # Detectar ruta de Boost instalada por Chocolatey
        $boostDir = Get-ChildItem "C:\local\boost_*" | Select-Object -First 1 -ExpandProperty FullName
        if (-not $boostDir) { throw "No se encontró la instalación de Boost" }
        
        # Asegurarse de que las variables de entorno estén correctamente configuradas
        $env:BOOST_ROOT = $boostDir
        $env:BOOST_LIBRARYDIR = "$boostDir\lib64-msvc-14.3"
        $env:CMAKE_PREFIX_PATH = "$boostDir;$env:CMAKE_PREFIX_PATH"
        echo "BOOST_ROOT=$boostDir" >> $env:GITHUB_ENV
        echo "BOOST_LIBRARYDIR=$boostDir\lib64-msvc-14.3" >> $env:GITHUB_ENV
        echo "CMAKE_PREFIX_PATH=$boostDir;$env:CMAKE_PREFIX_PATH" >> $env:GITHUB_ENV
        echo "VCToolsVersion=14.0" >> $env:GITHUB_ENV
        echo "VCToolsInstallDir=C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.0" >> $env:GITHUB_ENV
        
        # Verificar instalaciones
        Write-Host "Verificando instalaciones..." -NoNewline
        cmake --version | Out-Host
        cl.exe | Out-Host
        Write-Host "Boost instalado en: $boostDir" | Out-Host
        Write-Host " ✓"

    - name: Configurando CMake
      run: |
        # Configuración específica para MSVC
        Write-Host "Configurando CMake..." -NoNewline
        cmake -S . -B build -G "Ninja" `
          -DCMAKE_POLICY_DEFAULT_CMP0144=NEW `
          -DCMAKE_POLICY_DEFAULT_CMP0167=NEW `
          -DWITH_ELUNA=ON `
          -DCMAKE_BUILD_TYPE=Release `
          -DBOOST_ROOT="$env:BOOST_ROOT" `
          -DBoost_LIBRARY_DIR="$env:BOOST_LIBRARYDIR" `
          -DBoost_NO_SYSTEM_PATHS=ON `
          -DBoost_USE_STATIC_LIBS=ON `
          -DBoost_DEBUG=ON `
          -DBOOST_ALL_DYN_LINK=OFF `
          -DBoost_ARCHITECTURE="-x64" `
          -DCMAKE_INSTALL_PREFIX=./install `
          -DTOOLS=1 `
          -DWITH_WARNINGS=1 `
          -DCMAKE_C_COMPILER=cl.exe `
          -DCMAKE_CXX_COMPILER=cl.exe `
          -DCMAKE_PREFIX_PATH="$env:CMAKE_PREFIX_PATH" `
          --no-warn-unused-cli | Out-Host
        Write-Host " ✓"

    - name: Verificar configuración CMake
      run: |
        Write-Host "Verificando configuración..." -NoNewline
        cd build
        cmake --build . --target help | Out-Host
        Write-Host " ✓"

    - name: Build AzerothCore
      run: |
        Write-Host "Compilando AzerothCore..." -NoNewline
        cmake --build build --parallel 4 | Out-Host
        Write-Host " ✓"