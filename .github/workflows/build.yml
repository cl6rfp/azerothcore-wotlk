name: Build AzerothCore for Windows

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Install dependencies
      run: |
        choco install cmake -y
        choco install git -y
        choco install ninja -y
        choco install python -y
        choco install mariadb -y
        choco install vcredist140 -y

    - name: Download Boost 1.83.0 (Versión más estable)
      run: |
        Invoke-WebRequest -Uri "https://sourceforge.net/projects/boost/files/boost-binaries/1.83.0/boost_1_83_0-msvc-14.2-64.exe/download" -OutFile "boost_installer.exe"
        Start-Process -Wait -FilePath ".\boost_installer.exe" -ArgumentList "/VERYSILENT", "/DIR=C:\boost", "/NOICONS"

    - name: Configure CMake (Compatibilidad garantizada)
      run: |
        # Variables de entorno críticas
        $env:BOOST_ROOT = "C:\boost"
        $env:BOOST_LIBRARYDIR = "C:\boost\lib64-msvc-14.2"
        $env:BOOST_INCLUDEDIR = "C:\boost\include\boost-1_83"
        
        cmake -S . -B build -G "Ninja" `
          -DWITH_ELUNA=ON `
          -DCMAKE_BUILD_TYPE=Release `
          -DBOOST_ROOT="$env:BOOST_ROOT" `
          -DBoost_LIBRARY_DIR="$env:BOOST_LIBRARYDIR" `
          -DBoost_INCLUDE_DIR="$env:BOOST_INCLUDEDIR" `
          -DBoost_NO_SYSTEM_PATHS=ON `
          -DBoost_USE_STATIC_LIBS=ON

    - name: Build AzerothCore
      run: cmake --build build --config Release --parallel 4

    # Pasos adicionales (copiar archivos, comprimir, etc.)
    - name: Package artifacts
      run: |
        mkdir build\config
        copy configs\* build\config\
        mkdir build\modules
        xcopy /E /I /Y modules build\modules
        cd build
        7z a azerothcore.zip *
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: azerothcore-package
        path: build\azerothcore.zip
