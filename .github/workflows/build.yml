name: Build AzerothCore for Windows

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Install Visual Studio Build Tools
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    - name: Install dependencias
      run: |
        # Instalar Chocolatey si no está instalado
        Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
        
        # Instalar dependencias con progreso en una línea
        $packages = @("cmake", "git", "ninja", "python", "mariadb", "vcredist140")
        foreach ($package in $packages) {
            Write-Host "Instalando $package..." -NoNewline
            choco install $package -y --no-progress | Out-Host
            Write-Host " ✓"
        }

        # Instalar Boost manualmente
        Write-Host "Instalando Boost..." -NoNewline
        # Crear directorio para Boost
        $boostDir = "C:\local\boost_1_78_0"
        New-Item -ItemType Directory -Force -Path $boostDir | Out-Null
        
        # Descargar Boost
        $boostUrl = "https://boostorg.jfrog.io/artifactory/main/release/1.78.0/source/boost_1_78_0.zip"
        $boostZip = "$env:TEMP\boost_1_78_0.zip"
        Invoke-WebRequest -Uri $boostUrl -OutFile $boostZip
        
        # Extraer Boost
        Expand-Archive -Path $boostZip -DestinationPath "C:\local" -Force
        
        # Compilar Boost
        cd $boostDir
        .\bootstrap.bat
        
        # Configurar y compilar Boost
        .\b2.exe toolset=msvc-14.0 address-model=64 architecture=x86 link=static runtime-link=static threading=multi --build-type=complete --prefix=$boostDir install
        
        # Verificar que los archivos de configuración existen
        if (-not (Test-Path "$boostDir\lib\cmake\Boost-1.78.0\BoostConfig.cmake")) {
            throw "Los archivos de configuración de Boost no se generaron correctamente"
        }
        
        Write-Host " ✓"
        
        # Configurar variables de entorno para Visual Studio
        $env:VCToolsVersion = "14.0"
        $env:VCToolsInstallDir = "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.0"
        
        # Asegurarse de que las variables de entorno estén correctamente configuradas
        $env:BOOST_ROOT = $boostDir
        $env:BOOST_LIBRARYDIR = "$boostDir\lib"
        $env:CMAKE_PREFIX_PATH = "$boostDir;$env:CMAKE_PREFIX_PATH"
        $env:BOOST_DIR = "$boostDir\lib\cmake\Boost-1.78.0"
        echo "BOOST_ROOT=$boostDir" >> $env:GITHUB_ENV
        echo "BOOST_LIBRARYDIR=$boostDir\lib" >> $env:GITHUB_ENV
        echo "CMAKE_PREFIX_PATH=$boostDir;$env:CMAKE_PREFIX_PATH" >> $env:GITHUB_ENV
        echo "BOOST_DIR=$boostDir\lib\cmake\Boost-1.78.0" >> $env:GITHUB_ENV
        echo "VCToolsVersion=14.0" >> $env:GITHUB_ENV
        echo "VCToolsInstallDir=C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.0" >> $env:GITHUB_ENV
        
        # Verificar instalaciones
        Write-Host "Verificando instalaciones..." -NoNewline
        cmake --version | Out-Host
        cl.exe | Out-Host
        Write-Host "Boost instalado en: $boostDir" | Out-Host
        Write-Host "Archivos de configuración en: $env:BOOST_DIR" | Out-Host
        Write-Host " ✓"

    - name: Configure CMake
      run: |
        $env:CMAKE_PREFIX_PATH = "C:\local\boost_1_78_0"
        $env:BOOST_ROOT = "C:\local\boost_1_78_0"
        $env:BOOST_LIBRARYDIR = "C:\local\boost_1_78_0\lib"
        $env:BOOST_INCLUDEDIR = "C:\local\boost_1_78_0\include"
        $env:CMAKE_MODULE_PATH = "$pwd\deps\boost_config"
        cmake -S . -B build -G "Visual Studio 17 2022" -A x64 `
          -DBOOST_ROOT="$env:BOOST_ROOT" `
          -DBoost_LIBRARY_DIR="$env:BOOST_LIBRARYDIR" `
          -DBoost_INCLUDE_DIR="$env:BOOST_INCLUDEDIR" `
          -DCMAKE_MODULE_PATH="$env:CMAKE_MODULE_PATH"

    - name: Verificar configuración CMake
      run: |
        Write-Host "Verificando configuración..." -NoNewline
        cd build
        cmake --build . --target help | Out-Host
        Write-Host " ✓"

    - name: Build AzerothCore
      run: |
        Write-Host "Compilando AzerothCore..." -NoNewline
        cmake --build build --parallel 4 | Out-Host
        Write-Host " ✓"